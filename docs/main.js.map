{"version":3,"sources":["./projects/ngx-dom-navigator-demo/src/environments/environment.ts","./projects/ngx-dom-navigator-demo/src/app/app-routing.module.ts","./projects/ngx-dom-navigator-demo/src/app/app.component.ts","./projects/ngx-dom-navigator-demo/src/app/app.component.html","./projects/ngx-dom-navigator-demo/src/app/app.module.ts","./projects/ngx-dom-navigator/src/lib/interfaces/dom-navigator-settings.i.ts","./projects/ngx-dom-navigator/src/lib/dom-navigator.ts","./projects/ngx-dom-navigator/src/public-api.ts","./projects/ngx-dom-navigator-demo/src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,MAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACdnE;AAAA;AAAA;AAAA;AAAuD;;;AAEvD,MAAM,MAAM,GAAW,EAAE,CAAC;AAMnB,MAAM,gBAAgB;;gFAAhB,gBAAgB;+FAAhB,gBAAgB;mGAHlB,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,EAC7B,4DAAY;mIAEX,gBAAgB,uFAFjB,4DAAY;;;;;;;;;;;;;ACNxB;AAAA;AAAA;AAAA;AAAA;AAAgH;;;;;ICC/G,wEAIC;IAHA,6UAAqB;IAIrB,uDACD;IAAA,4DAAK;;;;IAHJ,uGAAiD;IAEjD,0DACD;IADC,mFACD;;ADDM,MAAM,YAAY;IALzB;QAME,UAAK,GAAG,wBAAwB,CAAC;QACjC,UAAK,GAAG,EAAE;KAmBX;IAjBC,QAAQ;QACN,KAAK,IAAI,KAAK,GAAG,CAAC,EAAE,KAAK,GAAG,IAAI,EAAE,KAAK,EAAE,EAAE;YACzC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;SACxB;QAED,IAAI,SAAS,GAAG,QAAQ,CAAC,aAAa,CAAC,UAAU,CAAwB,CAAC;QAC1E,qJAAqJ;QACrJ,IAAI,CAAC,SAAS,GAAG,IAAI,sFAAY,CAAC,SAAS,EAAE,sFAAY,CAAC,eAAe,CAAC,CAAC;QAC3E,IAAI,CAAC,SAAS,CAAC,iBAAiB,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE;YAC7C,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;QACjB,CAAC,CAAC,CAAC;IAEL,CAAC;IAED,KAAK,CAAC,CAAC;QACL,OAAO,CAAC,GAAG,CAAC,YAAY,CAAC,EAAE,CAAC,CAAC;IAC/B,CAAC;;wEApBU,YAAY;4FAAZ,YAAY;QCNzB,wEAAiB;QAChB,sGAMK;QACN,4DAAK;;QALc,0DAAU;QAAV,8EAAU;;;;;;;;;;;;;;ACH7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0D;AAEF;AACT;;AAaxC,MAAM,SAAS;;kEAAT,SAAS;wFAAT,SAAS,cAFR,2DAAY;6FADb,EAAE,YAJJ;YACP,uEAAa;YACb,oEAAgB;SACjB;mIAIU,SAAS,mBATlB,2DAAY,aAGZ,uEAAa;QACb,oEAAgB;;;;;;;;;;;;;ACApB;AAAA;AAAA,IAAY,gBAKX;AALD,WAAY,gBAAgB;IACxB,uDAAQ;IACR,mEAAc;IACd,+DAAY;IACZ,uDAAQ;AACZ,CAAC,EALW,gBAAgB,KAAhB,gBAAgB,QAK3B;;;;;;;;;;;;;ACjBD;AAAA;AAAA;AAAA;AAA+F;AAEhE;AAExB,MAAM,YAAY;IASrB,YAAY,SAA8B,EAAE,QAA8B;;QACtE,IAAI,CAAC,IAAI,GAAG,MAAM,CAAC,QAAQ,CAAC;QAC5B,IAAI,CAAC,UAAU,GAAG,SAAS,CAAC;QAC5B,IAAI,CAAC,QAAQ,GAAG,YAAY,CAAC,eAAe,CAAC;QAC7C,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE;YAChC,IAAI,QAAQ,CAAC,GAAG,CAAC;gBACb,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,GAAG,QAAQ,CAAC,GAAG,CAAC,CAAC;QAC3C,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,iBAAiB,SAAG,QAAQ,CAAC,gBAAgB,mCAAI,EAAE,CAAC;QACzD,IAAI,CAAC,IAAI,EAAE,CAAC;IAChB,CAAC;IAEO,UAAU,CAAC,EAAE;QACjB,IAAI,IAAI,GAAG,EAAE,CAAC,qBAAqB,EAAE,CAAC;QACtC,OAAO,CACH,IAAI,CAAC,GAAG,IAAI,CAAC;YACb,IAAI,CAAC,IAAI,IAAI,CAAC;YACd,IAAI,CAAC,MAAM,IAAI,MAAM,CAAC,WAAW;YACjC,IAAI,CAAC,KAAK,IAAI,MAAM,CAAC,UAAU,CAClC,CAAC;IACN,CAAC;IAEO,YAAY,CAAC,GAAG;QACpB,IAAI,GAAG,CAAC,MAAM,IAAI,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE;YAClC,OAAO,GAAG,CAAC,CAAC,CAAC,CAAC;SACjB;QACD,OAAO,GAAG,CAAC;IACf,CAAC;IAEO,iBAAiB,CAAC,EAAE;QACxB,IAAI,SAAS,GAAG,CAAC,CAAC;QAClB,GAAG;YACC,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,SAAS,CAAC,EAAE;gBACtB,SAAS,IAAI,EAAE,CAAC,SAAS,CAAC;aAC7B;SACJ,QAAQ,CAAC,EAAE,GAAG,EAAE,CAAC,YAAY,CAAC,EAAE;QACjC,OAAO,SAAS,CAAC;IACrB,CAAC;IAED;;;;;;OAMG;IACK,kBAAkB,CAAC,EAAE;QACzB,IAAI,UAAU,GAAG,CAAC,CAAC;QACnB,GAAG;YACC,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,UAAU,CAAC,EAAE;gBACvB,UAAU,IAAI,EAAE,CAAC,UAAU,CAAC;aAC/B;SACJ,QAAQ,CAAC,EAAE,GAAG,EAAE,CAAC,YAAY,CAAC,EAAE;QACjC,OAAO,UAAU,CAAC;IACtB,CAAC;IAEO,QAAQ,CAAC,EAAE,EAAE,SAAS;QAC1B,IAAI,EAAE,CAAC,SAAS,EAAE;YACd,EAAE,CAAC,SAAS,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;SAC/B;aAAM;YACH,EAAE,CAAC,SAAS,IAAI,GAAG,GAAG,SAAS,CAAC;SACnC;IACL,CAAC;IAEO,WAAW,CAAC,EAAE,EAAE,SAAS;QAC7B,IAAI,EAAE,CAAC,SAAS,EAAE;YACd,EAAE,CAAC,SAAS,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;SAClC;aAAM;YACH,EAAE,CAAC,SAAS,GAAG,EAAE,CAAC,SAAS,CAAC,OAAO,CAAC,IAAI,MAAM,CAAC,SAAS,GAAG,SAAS,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,SAAS,EAAE,IAAI,CAAC,EAAE,GAAG,CAAC,CAAC;SACtH;IACL,CAAC;IAED;;;;;OAKG;IACH,MAAM,KAAK,SAAS;QAChB,OAAO;YACH,IAAI,EAAE,MAAM;YACZ,EAAE,EAAE,IAAI;YACR,KAAK,EAAE,OAAO;YACd,IAAI,EAAE,MAAM;SACf,CAAC;IACN,CAAC;IAED;;;;;OAKG;IACH,MAAM,KAAK,eAAe;QACtB,OAAO;YACH,IAAI,EAAE,qFAAgB,CAAC,IAAI;YAC3B,iBAAiB,EAAE,UAAU;YAC7B,IAAI,EAAE,EAAE;YACR,EAAE,EAAE,EAAE;YACN,KAAK,EAAE,EAAE;YACT,IAAI,EAAE,EAAE;YACR,IAAI,EAAE,CAAC;YACP,MAAM,EAAE,EAAE;SACb,CAAC;IACN,CAAC;IAED;;;;;;;OAOG;IAEH;;OAEG;IACK,IAAI;QACR,IAAI,CAAC,eAAe,EAAE,CAAC;QACvB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC;QAE5B,sBAAsB;QACtB,IAAI,CAAC,KAAK,GAAG,EAAE;QACf,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC;QAC3C,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,EAAE,CAAC;QACvC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC;QAC7C,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC;QAC3C,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC,YAAY,CAAC;QAErD,0CAA0C;QAC1C,IAAI,IAAI,CAAC,QAAQ,CAAC,IAAI,KAAK,qFAAgB,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE;YACrE,IAAI,GAAG,GAAG,IAAI,CAAC,QAAQ,EAAE,CAAC;YAC1B,IAAI,KAAK,GAAG,EAAE,CAAC;YACf,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gBACjC,IAAI,CAAC,GAAG,CAAC,IAAI,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC,SAAS,EAAE;oBAC5C,MAAM;iBACT;gBACD,KAAK,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC;aAC/B;YACD,IAAI,CAAC,QAAQ,CAAC,IAAI,GAAG,KAAK,CAAC,MAAM,CAAC;SACrC;QAED,IAAI,CAAC,MAAM,EAAE,CAAC;QACd,IAAI,CAAC,iBAAiB,GAAG,IAAI,4CAAO,EAAE,CAAC;IAC3C,CAAC;IAED;;;;OAIG;IACK,eAAe;QACnB,IAAI,SAAS,GAAG,MAAM,CAAC,MAAM,CAAC,qFAAgB,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;QAC7E,IAAI,CAAC,SAAS,EAAE;YACZ,MAAM,IAAI,KAAK,CAAC,+BAA+B,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;SACzE;IACL,CAAC;IAED;;;;OAIG;IACH,MAAM;QACF,IAAI,IAAI,GAAG,IAAI,CAAC;QAChB,IAAI,CAAC,eAAe,GAAG,UAAU,KAAK;YAClC,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;QACzC,CAAC,CAAC;QACF,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAC,SAAS,EAAE,IAAI,CAAC,eAAe,CAAC,CAAC;IAChE,CAAC;IAED;;;;OAIG;IACH,OAAO;QACH,IAAI,IAAI,CAAC,eAAe,EAAE;YACtB,IAAI,CAAC,IAAI,CAAC,mBAAmB,CAAC,SAAS,EAAE,IAAI,CAAC,eAAe,CAAC,CAAC;SAClE;QACD,IAAI,CAAC,cAAc,EAAE,CAAC;IAC1B,CAAC;IAED,cAAc;QACV,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;IAC1B,CAAC;IAED;;;;OAIG;IACH,OAAO;QACH,IAAI,CAAC,OAAO,EAAE,CAAC;QACf,IAAI,IAAI,CAAC,UAAU,CAAC,YAAY,EAAE;YAC9B,OAAO,IAAI,CAAC,UAAU,CAAC,YAAY,CAAC;SACvC;IACL,CAAC;IAED;;;;OAIG;IACK,IAAI;QACR,IAAI,IAAI,GAAG,IAAI,CAAC;QAEhB,QAAQ,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE;YAExB,KAAK,qFAAgB,CAAC,IAAI;gBACtB,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE;oBACjB,IAAI,GAAG,IAAI,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC,CAAC;oBAC1B,MAAM;iBACT;gBAED,IAAI,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,UAAU,GAAG,CAAC,CAAC;gBACzC,IAAI,GAAG,GAAG,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC;gBAEnC,IAAI,GAAG,IAAI,CAAC,cAAc,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAC,MAAM,CAAC,CAAC,IAAI,EAAE,IAAI,EAAE,EAAE;oBAC7D,IAAI,YAAY,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,GAAG,IAAI,CAAC,UAAU,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC;oBACrF,IAAI,YAAY,GAAG,IAAI,CAAC,QAAQ,EAAE;wBAC9B,OAAO;4BACH,QAAQ,EAAE,YAAY;4BACtB,OAAO,EAAE,IAAI;yBAChB,CAAC;qBACL;oBACD,OAAO,IAAI,CAAC;gBAChB,CAAC,EAAE;oBACC,QAAQ,EAAE,QAAQ;iBACrB,CAAC,CAAC;gBACH,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC;gBACpB,MAAM;YAEV,KAAK,qFAAgB,CAAC,UAAU;gBAC5B,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE;oBACjB,IAAI,GAAG,IAAI,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC,CAAC;oBAC1B,MAAM;iBACT;gBAED,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,sBAAsB,CAAC;gBAC7C,MAAM;YAEV,KAAK,qFAAgB,CAAC,QAAQ;gBAC1B,MAAM;YAEV,KAAK,qFAAgB,CAAC,IAAI;gBACtB,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE;oBACjB,IAAI,GAAG,IAAI,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC,CAAC;oBAC1B,MAAM;iBACT;gBAED,IAAI,KAAK,GAAG,IAAI,CAAC,QAAQ,EAAE,CAAC,OAAO,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;gBACpD,IAAI,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,KAAK,CAAC,EAAE;oBAClC,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,sBAAsB,CAAC;iBAChD;gBAED,MAAM;SACb;QAED,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE,YAAY,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;IACnD,CAAC;IAED;;;;OAIG;IACK,EAAE;QACN,IAAI,IAAI,GAAG,IAAI,CAAC;QAEhB,QAAQ,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE;YAExB,KAAK,qFAAgB,CAAC,IAAI;gBACtB,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE;oBACjB,IAAI,GAAG,IAAI,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC,CAAC;oBAC1B,MAAM;iBACT;gBAED,IAAI,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC;gBACrC,IAAI,GAAG,GAAG,IAAI,CAAC,SAAS,CAAC,SAAS,GAAG,CAAC,CAAC;gBAEvC,IAAI,GAAG,IAAI,CAAC,cAAc,CAAC,QAAQ,EAAE,GAAG,CAAC,CAAC,MAAM,CAAC,CAAC,IAAI,EAAE,IAAI,EAAE,EAAE;oBAC5D,IAAI,YAAY,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,GAAG,IAAI,CAAC,UAAU,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC;oBACrF,IAAI,YAAY,GAAG,IAAI,CAAC,QAAQ,EAAE;wBAC9B,OAAO;4BACH,QAAQ,EAAE,YAAY;4BACtB,OAAO,EAAE,IAAI;yBAChB,CAAC;qBACL;oBACD,OAAO,IAAI,CAAC;gBAChB,CAAC,EAAE;oBACC,QAAQ,EAAE,QAAQ;iBACrB,CAAC,CAAC;gBAEH,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC;gBACpB,MAAM;YAEV,KAAK,qFAAgB,CAAC,UAAU;gBAC5B,MAAM;YAEV,KAAK,qFAAgB,CAAC,QAAQ;gBAC1B,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE;oBACjB,IAAI,GAAG,IAAI,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC,CAAC;oBAC1B,MAAM;iBACT;gBAED,IAAI,UAAU,GAAG,IAAI,CAAC,SAAS,CAAC,sBAAsB,CAAC;gBACvD,IAAI,KAAK,GAAG,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,MAAM,CAAC;gBAC9C,IAAI,OAAO,GAAG,CAAC,CAAC;gBAChB,OAAO,IAAI,CAAC,iBAAiB,CAAC,UAAU,aAAV,UAAU,uBAAV,UAAU,CAAE,SAAS,EAAE,IAAI,CAAC,iBAAiB,CAAC,EAAE;oBAC1E,IAAI,OAAO,IAAI,KAAK,EAAE;wBAClB,MAAM;qBACT;oBACD,OAAO,EAAE,CAAC;oBACV,UAAU,GAAG,UAAU,CAAC,sBAAsB,CAAC;iBAClD;gBAED,IAAI,CAAC,UAAU,EAAE;oBACb,MAAM;iBACT;gBACD,IAAI,GAAG,UAAU,CAAC;gBAClB,MAAM;YAEV,KAAK,qFAAgB,CAAC,IAAI;gBACtB,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE;oBACjB,IAAI,GAAG,IAAI,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC,CAAC;oBAC1B,MAAM;iBACT;gBAED,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC;gBACtB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC,EAAE,EAAE;oBACzC,IAAI,GAAG,IAAI,IAAI,IAAI,CAAC,sBAAsB,CAAC;iBAC9C;gBAED,MAAM;SACb;QAED,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE,YAAY,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC;IACjD,CAAC;IAED;;OAEG;IACK,YAAY;QAChB,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;IAC3B,CAAC;IAED;;;;OAIG;IACK,KAAK;QACT,IAAI,IAAI,GAAG,IAAI,CAAC;QAEhB,QAAQ,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE;YAExB,KAAK,qFAAgB,CAAC,IAAI;gBACtB,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE;oBACjB,IAAI,GAAG,IAAI,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC,CAAC;oBAC1B,MAAM;iBACT;gBAED,IAAI,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,UAAU,GAAG,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC;gBAClE,IAAI,GAAG,GAAG,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC;gBAEnC,IAAI,GAAG,IAAI,CAAC,aAAa,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,IAAI,EAAE,IAAI,EAAE,EAAE;oBACrD,IAAI,YAAY,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,GAAG,GAAG,CAAC,CAAC;oBACrF,IAAI,YAAY,GAAG,IAAI,CAAC,QAAQ,EAAE;wBAC9B,OAAO;4BACH,QAAQ,EAAE,YAAY;4BACtB,OAAO,EAAE,IAAI;yBAChB,CAAC;qBACL;oBACD,OAAO,IAAI,CAAC;gBAChB,CAAC,EAAE;oBACC,QAAQ,EAAE,QAAQ;iBACrB,CAAC,CAAC;gBACH,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC;gBACpB,MAAM;YAEV,KAAK,qFAAgB,CAAC,UAAU;gBAC5B,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE;oBACjB,IAAI,GAAG,IAAI,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC,CAAC;oBAC1B,MAAM;iBACT;gBACD,IAAI,UAAU,GAAG,IAAI,CAAC,SAAS,CAAC,kBAAkB,CAAC;gBACnD,IAAI,KAAK,GAAG,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,MAAM,CAAC;gBAC9C,IAAI,OAAO,GAAG,CAAC,CAAC;gBAChB,OAAO,IAAI,CAAC,iBAAiB,CAAC,UAAU,aAAV,UAAU,uBAAV,UAAU,CAAE,SAAS,EAAE,IAAI,CAAC,iBAAiB,CAAC,EAAE;oBAC1E,IAAI,OAAO,IAAI,KAAK,EAAE;wBAClB,MAAM;qBACT;oBACD,OAAO,EAAE,CAAC;oBACV,UAAU,GAAG,UAAU,CAAC,kBAAkB,CAAC;iBAC9C;gBAED,IAAI,CAAC,UAAU,EAAE;oBACb,MAAM;iBACT;gBACD,IAAI,GAAG,UAAU,CAAC;gBAClB,MAAM;YAEV,KAAK,qFAAgB,CAAC,QAAQ;gBAC1B,MAAM;YAEV,KAAK,qFAAgB,CAAC,IAAI;gBACtB,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE;oBACjB,IAAI,GAAG,IAAI,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC,CAAC;oBAC1B,MAAM;iBACT;gBAED,IAAI,KAAK,GAAG,IAAI,CAAC,QAAQ,EAAE,CAAC,OAAO,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;gBACpD,IAAI,KAAK,KAAK,CAAC,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,KAAK,CAAC,EAAE;oBACvD,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,kBAAkB,CAAC;iBAC5C;gBAED,MAAM;SACb;QAED,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE,YAAY,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;IACpD,CAAC;IAED;;OAEG;IACK,IAAI;QACR,IAAI,IAAI,GAAG,IAAI,CAAC;QAEhB,QAAQ,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE;YAExB,KAAK,qFAAgB,CAAC,IAAI;gBACtB,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE;oBACjB,IAAI,GAAG,IAAI,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC,CAAC;oBAC1B,MAAM;iBACT;gBAED,IAAI,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC;gBACrC,IAAI,GAAG,GAAG,IAAI,CAAC,SAAS,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC,YAAY,CAAC;gBAEjE,IAAI,GAAG,IAAI,CAAC,aAAa,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,MAAM,CAAC,CAAC,IAAI,EAAE,IAAI,EAAE,EAAE;oBACpD,IAAI,YAAY,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,GAAG,GAAG,CAAC,CAAC;oBACrF,IAAI,YAAY,GAAG,IAAI,CAAC,QAAQ,EAAE;wBAC9B,OAAO;4BACH,QAAQ,EAAE,YAAY;4BACtB,OAAO,EAAE,IAAI;yBAChB,CAAC;qBACL;oBACD,OAAO,IAAI,CAAC;gBAChB,CAAC,EAAE;oBACC,QAAQ,EAAE,QAAQ;iBACrB,CAAC,CAAC;gBACH,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC;gBACpB,MAAM;YAEV,KAAK,qFAAgB,CAAC,UAAU;gBAC5B,MAAM;YAEV,KAAK,qFAAgB,CAAC,QAAQ;gBAC1B,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE;oBACjB,IAAI,GAAG,IAAI,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC,CAAC;oBAC1B,MAAM;iBACT;gBAED,IAAI,UAAU,GAAG,IAAI,CAAC,SAAS,CAAC,kBAAkB,CAAC;gBACnD,IAAI,KAAK,GAAG,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,MAAM,CAAC;gBAC9C,IAAI,OAAO,GAAG,CAAC,CAAC;gBAChB,OAAO,IAAI,CAAC,iBAAiB,CAAC,UAAU,aAAV,UAAU,uBAAV,UAAU,CAAE,SAAS,EAAE,IAAI,CAAC,iBAAiB,CAAC,EAAE;oBAC1E,IAAI,OAAO,IAAI,KAAK,EAAE;wBAClB,MAAM;qBACT;oBACD,OAAO,EAAE,CAAC;oBACV,UAAU,GAAG,UAAU,CAAC,kBAAkB,CAAC;iBAC9C;gBAED,IAAI,CAAC,UAAU,EAAE;oBACb,MAAM;iBACT;gBACD,IAAI,GAAG,UAAU,CAAC;gBAClB,MAAM;YAEV,KAAK,qFAAgB,CAAC,IAAI;gBACtB,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE;oBACjB,IAAI,GAAG,IAAI,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC,CAAC;oBAC1B,MAAM;iBACT;gBAED,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC;gBACtB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC,EAAE,EAAE;oBACzC,IAAI,GAAG,IAAI,IAAI,IAAI,CAAC,kBAAkB,CAAC;iBAC1C;gBAED,MAAM;SACb;QAED,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE,YAAY,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;IACnD,CAAC;IAED;;;;OAIG;IACK,QAAQ;QACZ,OAAO,IAAI,CAAC,SAAS,CAAC;IAC1B,CAAC;IAED;;;;;;OAMG;IACI,MAAM,CAAC,EAAE,EAAE,SAAS;QACvB,yCAAyC;QACzC,IAAI,CAAC,EAAE,IAAI,EAAE,KAAK,IAAI,CAAC,SAAS,EAAE;YAC9B,OAAO,CAAC,sBAAsB;SACjC;QACD,EAAE,GAAG,IAAI,CAAC,YAAY,CAAC,EAAE,CAAC,CAAC;QAE3B,6BAA6B;QAC7B,IAAI,IAAI,CAAC,SAAS,EAAE;YAChB,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,QAAQ,CAAC,iBAAiB,CAAC,CAAC;SACrE;QAED,2BAA2B;QAC3B,IAAI,CAAC,QAAQ,CAAC,EAAE,EAAE,SAAS,CAAC,CAAC;QAE7B,wBAAwB;QACxB,IAAI,CAAC,QAAQ,CAAC,EAAE,EAAE,IAAI,CAAC,QAAQ,CAAC,iBAAiB,CAAC,CAAC;QACnD,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;QACpB,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACpC,CAAC;IAED;;;;;;;OAOG;IACK,QAAQ,CAAC,EAAE,EAAE,SAAS;QAC1B,EAAE,GAAG,IAAI,CAAC,YAAY,CAAC,EAAE,CAAC,CAAC;QAC3B,IAAI,CAAC,IAAI,CAAC,mBAAmB,CAAC,EAAE,CAAC,EAAE;YAC/B,QAAQ,SAAS,EAAE;gBACf,KAAK,YAAY,CAAC,SAAS,CAAC,IAAI;oBAC5B,IAAI,CAAC,UAAU,CAAC,UAAU,GAAG,EAAE,CAAC,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC;oBACxE,MAAM;gBACV,KAAK,YAAY,CAAC,SAAS,CAAC,EAAE;oBAC1B,IAAI,CAAC,UAAU,CAAC,SAAS,GAAG,EAAE,CAAC,SAAS,GAAG,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC;oBACrE,MAAM;gBACV,KAAK,YAAY,CAAC,SAAS,CAAC,KAAK;oBAC7B,IAAI,CAAC,UAAU,CAAC,UAAU,GAAG,EAAE,CAAC,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC,UAAU,GAAG,CAAC,IAAI,CAAC,UAAU,CAAC,WAAW,GAAG,EAAE,CAAC,WAAW,CAAC,CAAC;oBACzH,MAAM;gBACV,KAAK,YAAY,CAAC,SAAS,CAAC,IAAI;oBAC5B,IAAI,CAAC,UAAU,CAAC,SAAS,GAAG,EAAE,CAAC,SAAS,GAAG,IAAI,CAAC,UAAU,CAAC,SAAS,GAAG,CAAC,IAAI,CAAC,UAAU,CAAC,YAAY,GAAG,EAAE,CAAC,YAAY,CAAC,CAAC;oBACxH,MAAM;aACb;SACJ;aAAM,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,EAAE,CAAC,EAAE;YAC7B,QAAQ,SAAS,EAAE;gBACf,KAAK,YAAY,CAAC,SAAS,CAAC,IAAI;oBAC5B,QAAQ,CAAC,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,kBAAkB,CAAC,EAAE,CAAC,GAAG,QAAQ,CAAC,IAAI,CAAC,UAAU,CAAC;oBAClF,MAAM;gBACV,KAAK,YAAY,CAAC,SAAS,CAAC,EAAE;oBAC1B,QAAQ,CAAC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,iBAAiB,CAAC,EAAE,CAAC,GAAG,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC;oBAC/E,MAAM;gBACV,KAAK,YAAY,CAAC,SAAS,CAAC,KAAK;oBAC7B,QAAQ,CAAC,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,kBAAkB,CAAC,EAAE,CAAC,GAAG,QAAQ,CAAC,IAAI,CAAC,UAAU,GAAG,CAAC,QAAQ,CAAC,eAAe,CAAC,WAAW,GAAG,EAAE,CAAC,WAAW,CAAC,CAAC;oBAC5I,MAAM;gBACV,KAAK,YAAY,CAAC,SAAS,CAAC,IAAI;oBAC5B,QAAQ,CAAC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,iBAAiB,CAAC,EAAE,CAAC,GAAG,QAAQ,CAAC,IAAI,CAAC,SAAS,GAAG,CAAC,QAAQ,CAAC,eAAe,CAAC,YAAY,GAAG,EAAE,CAAC,YAAY,CAAC,CAAC;oBAC3I,MAAM;aACb;SACJ;IACL,CAAC;IAED;;;;;;OAMG;IACK,mBAAmB,CAAC,EAAE;QAC1B,EAAE,GAAG,IAAI,CAAC,YAAY,CAAC,EAAE,CAAC,CAAC;QAC3B,sBAAsB;QACtB,IAAI,EAAE,CAAC,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC,UAAU,EAAE;YACzE,OAAO,KAAK,CAAC;SAChB;QACD,qBAAqB;QACrB,IAAI,EAAE,CAAC,SAAS,GAAG,IAAI,CAAC,UAAU,CAAC,SAAS,GAAG,IAAI,CAAC,UAAU,CAAC,SAAS,EAAE;YACtE,OAAO,KAAK,CAAC;SAChB;QACD,uBAAuB;QACvB,IAAI,CAAC,EAAE,CAAC,UAAU,GAAG,EAAE,CAAC,WAAW,GAAG,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,GAAG,CAAC,IAAI,CAAC,UAAU,CAAC,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC,WAAW,CAAC,EAAE;YAC5H,OAAO,KAAK,CAAC;SAChB;QACD,sBAAsB;QACtB,IAAI,CAAC,EAAE,CAAC,SAAS,GAAG,EAAE,CAAC,YAAY,GAAG,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,UAAU,CAAC,SAAS,GAAG,IAAI,CAAC,UAAU,CAAC,YAAY,CAAC,EAAE;YAC3H,OAAO,KAAK,CAAC;SAChB;QACD,OAAO,IAAI,CAAC;IAChB,CAAC;IAED;;;;OAIG;IACK,QAAQ;QACZ,IAAI,QAAQ,GAAG,EAAE,CAAC;QAClB,KAAK,IAAI,CAAC,GAAG,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC,EAAE,GAAG;YAChD,4BAA4B;YAC5B,IAAI,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,QAAQ,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,SAAS,EAAE,IAAI,CAAC,iBAAiB,CAAC,EAAE;gBACtI,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;aACjD;SACJ;QACD,OAAO,QAAQ,CAAC;IACpB,CAAC;IAEO,iBAAiB,CAAC,MAAM,EAAE,MAAM;QACpC,kBAAkB;QAClB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YAEpC,kBAAkB;YAClB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gBAEpC,kCAAkC;gBAClC,iCAAiC;gBACjC,SAAS;gBACT,IAAI,MAAM,CAAC,CAAC,CAAC,KAAK,MAAM,CAAC,CAAC,CAAC,EAAE;oBAEzB,iCAAiC;oBACjC,OAAO,IAAI,CAAC;iBACf;aACJ;SACJ;QAED,oCAAoC;QACpC,OAAO,KAAK,CAAC;IACjB,CAAC;IAED;;;;;;;OAOG;IACK,aAAa,CAAC,IAAI,EAAE,GAAG;QAC3B,OAAO,IAAI,CAAC,QAAQ,EAAE,CAAC,MAAM,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,UAAU,IAAI,IAAI,IAAI,EAAE,CAAC,SAAS,IAAI,GAAG,CAAC,CAAC;IACtF,CAAC;IAED;;;;;;;OAOG;IACK,cAAc,CAAC,IAAI,EAAE,GAAG;QAC5B,OAAO,IAAI,CAAC,QAAQ,EAAE,CAAC,MAAM,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,UAAU,IAAI,IAAI,IAAI,EAAE,CAAC,SAAS,IAAI,GAAG,CAAC,CAAC;IACtF,CAAC;IAED;;;;;;OAMG;IACK,aAAa,CAAC,KAAK;QACvB,IAAI,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,EAAE;YACzB,KAAK,CAAC,cAAc,EAAE,CAAC;YACvB,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;SACtC;IACL,CAAC;CACJ;;;;;;;;;;;;;ACxrBD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;GAIG;AAGiC;AACsB;AACD;;;;;;;;;;;;;;;;;;;ACTV;AAGF;AACY;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,2EAAwB,CAAC,eAAe,CAAC,yDAAS,CAAC;KAChD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;;;;;;;;;;;;ACXpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,qC","file":"main.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\n\r\nconst routes: Routes = [];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { DomNavigator, DomNavigatorElement, DomNavigatorMode } from 'projects/ngx-dom-navigator/src/public-api';\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent implements OnInit {\r\n  title = 'ngx-dom-navigator-demo';\r\n  codes = []\r\n  navigator: DomNavigator;\r\n  ngOnInit() {\r\n    for (let index = 0; index < 2000; index++) {\r\n      this.codes.push(index);\r\n    }\r\n\r\n    let container = document.querySelector('#context') as DomNavigatorElement;\r\n    // this.navigator = new DomNavigator(container, { mode: DomNavigatorMode.auto, selectedClassName: 'selected', ignoredClassList: ['ignored-class'] });\r\n    this.navigator = new DomNavigator(container, DomNavigator.DefaultSettings);\r\n    this.navigator.$selectionSubject.subscribe(r => {\r\n      console.log(r);\r\n    });\r\n\r\n  }\r\n\r\n  click(c) {\r\n    console.log(`Clicked: ${c}`);\r\n  }\r\n}\r\n","<style></style>\r\n<ul id=\"context\">\r\n\t<li\r\n\t\t(click)=\"click(code)\"\r\n\t\t*ngFor=\"let code of codes; let i = index\"\r\n\t\t[class]=\"i > 30 && i < 40 ? 'ignored-class' : ''\"\r\n\t>\r\n\t\t{{ code }}\r\n\t</li>\r\n</ul>\r\n","import { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","export interface DomNavigatorSettings {\r\n    mode?: DomNavigatorMode;\r\n    selectedClassName?: string;\r\n    left?: number;\r\n    up?: number;\r\n    right?: number;\r\n    down?: number;\r\n    cols?: number;\r\n    select?: number;\r\n    ignoredClassList?: Array<string>;\r\n}\r\n\r\nexport enum DomNavigatorMode {\r\n    auto = 1,\r\n    horizontal = 2,\r\n    vertical = 3,\r\n    grid = 4\r\n}","import { DomNavigatorMode, DomNavigatorSettings } from './interfaces/dom-navigator-settings.i';\r\nimport { DomNavigatorElement } from './interfaces/dom-navigator.element.i';\r\nimport { Subject } from 'rxjs';\r\n\r\nexport class DomNavigator {\r\n    private $doc: Document;\r\n    private settings: DomNavigatorSettings;\r\n    private $container: DomNavigatorElement;\r\n    private $keydownHandler;\r\n    private $keys: Array<Function>;\r\n    private $selected: HTMLLIElement;\r\n    private $ignoredClassList: Array<string>;\r\n    public $selectionSubject: Subject<any>;\r\n    constructor(container: DomNavigatorElement, settings: DomNavigatorSettings) {\r\n        this.$doc = window.document;\r\n        this.$container = container;\r\n        this.settings = DomNavigator.DefaultSettings;\r\n        Object.keys(settings).forEach(key => {\r\n            if (settings[key])\r\n                this.settings[key] = settings[key];\r\n        });\r\n        this.$ignoredClassList = settings.ignoredClassList ?? [];\r\n        this.init();\r\n    }\r\n\r\n    private inViewport(el) {\r\n        let rect = el.getBoundingClientRect();\r\n        return (\r\n            rect.top >= 0 &&\r\n            rect.left >= 0 &&\r\n            rect.bottom <= window.innerHeight &&\r\n            rect.right <= window.innerWidth\r\n        );\r\n    }\r\n\r\n    private unboxElement(obj) {\r\n        if (obj.jquery || Array.isArray(obj)) {\r\n            return obj[0];\r\n        }\r\n        return obj;\r\n    }\r\n\r\n    private absoluteOffsetTop(el) {\r\n        let offsetTop = 0;\r\n        do {\r\n            if (!isNaN(el.offsetTop)) {\r\n                offsetTop += el.offsetTop;\r\n            }\r\n        } while ((el = el.offsetParent));\r\n        return offsetTop;\r\n    }\r\n\r\n    /**\r\n     * Return the absolute offset left of an element.\r\n     *\r\n     * @param el {Element} The element.\r\n     *\r\n     * @return {Number} The offset left.\r\n     */\r\n    private absoluteOffsetLeft(el) {\r\n        let offsetLeft = 0;\r\n        do {\r\n            if (!isNaN(el.offsetLeft)) {\r\n                offsetLeft += el.offsetLeft;\r\n            }\r\n        } while ((el = el.offsetParent));\r\n        return offsetLeft;\r\n    }\r\n\r\n    private addClass(el, className) {\r\n        if (el.classList) {\r\n            el.classList.add(className);\r\n        } else {\r\n            el.className += ' ' + className;\r\n        }\r\n    }\r\n\r\n    private removeClass(el, className) {\r\n        if (el.classList) {\r\n            el.classList.remove(className);\r\n        } else {\r\n            el.className = el.className.replace(new RegExp('(^|\\\\b)' + className.split(' ').join('|') + '(\\\\b|$)', 'gi'), ' ');\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Directions.\r\n     *\r\n     * @returns {{left: string, up: string, right: string, down: string}}\r\n     * @constructor\r\n     */\r\n    static get DIRECTION() {\r\n        return {\r\n            left: 'left',\r\n            up: 'up',\r\n            right: 'right',\r\n            down: 'down'\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Default options.\r\n     *\r\n     * @returns {{mode: string, selected: string, left: number, up: number, right: number, down: number, cols: number}}\r\n     * @constructor\r\n     */\r\n    static get DefaultSettings(): DomNavigatorSettings {\r\n        return {\r\n            mode: DomNavigatorMode.auto,\r\n            selectedClassName: 'selected',\r\n            left: 37,\r\n            up: 38,\r\n            right: 39,\r\n            down: 40,\r\n            cols: 0,\r\n            select: 13,\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Create a new DOM Navigator.\r\n     *\r\n     * @param container {Element} The container of the element to navigate.\r\n     * @param settings {Object} The options to configure the DOM navigator.\r\n     *\r\n     * @return void.\r\n     */\r\n\r\n    /**\r\n     * Initialize the navigator.\r\n     */\r\n    private init() {\r\n        this.validateOptions();\r\n        this.$selected = null;\r\n        this.$keydownHandler = null;\r\n\r\n        // Create hotkeys map.\r\n        this.$keys = []\r\n        this.$keys[this.settings.left] = this.left;\r\n        this.$keys[this.settings.up] = this.up;\r\n        this.$keys[this.settings.right] = this.right;\r\n        this.$keys[this.settings.down] = this.down;\r\n        this.$keys[this.settings.select] = this.triggerClick;\r\n\r\n        // Calculate cols if needed for grid mode.\r\n        if (this.settings.mode === DomNavigatorMode.grid && !this.settings.cols) {\r\n            let els = this.elements();\r\n            let count = [];\r\n            for (let i = 0; i < els.length; i++) {\r\n                if (i > 0 && count[i - 1] !== els[i].offsetTop) {\r\n                    break;\r\n                }\r\n                count[i] = els[i].offsetTop;\r\n            }\r\n            this.settings.cols = count.length;\r\n        }\r\n\r\n        this.enable();\r\n        this.$selectionSubject = new Subject();\r\n    }\r\n\r\n    /**\r\n     * Validate current options.\r\n     *\r\n     * @return void.\r\n     */\r\n    private validateOptions() {\r\n        let validMode = Object.values(DomNavigatorMode).includes(this.settings.mode);\r\n        if (!validMode) {\r\n            throw new Error('Unsupported navigation mode: ' + this.settings.mode);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Enable this navigator.\r\n     *\r\n     * @return void.\r\n     */\r\n    enable() {\r\n        let self = this;\r\n        this.$keydownHandler = function (event) {\r\n            self.handleKeydown.call(self, event);\r\n        };\r\n        this.$doc.addEventListener('keydown', this.$keydownHandler);\r\n    }\r\n\r\n    /**\r\n     * Disable this navigator.\r\n     *\r\n     * @return void.\r\n     */\r\n    disable() {\r\n        if (this.$keydownHandler) {\r\n            this.$doc.removeEventListener('keydown', this.$keydownHandler);\r\n        }\r\n        this.clearSelection();\r\n    }\r\n\r\n    clearSelection() {\r\n        this.$selected = null;\r\n    }\r\n\r\n    /**\r\n     * Destroy this navigator removing any event registered and any other data.\r\n     *\r\n     * @return void.\r\n     */\r\n    destroy() {\r\n        this.disable();\r\n        if (this.$container.domNavigator) {\r\n            delete this.$container.domNavigator;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Navigate left to the next element if any.\r\n     *\r\n     * @return void.\r\n     */\r\n    private left() {\r\n        let next = null;\r\n\r\n        switch (this.settings.mode) {\r\n\r\n            case DomNavigatorMode.auto:\r\n                if (!this.$selected) {\r\n                    next = this.elements()[0];\r\n                    break;\r\n                }\r\n\r\n                let left = this.$selected.offsetLeft - 1;\r\n                let top = this.$selected.offsetTop;\r\n\r\n                next = this.elementsBefore(left, Infinity).reduce((prev, curr) => {\r\n                    let currDistance = Math.abs(left - curr.offsetLeft) + Math.abs(top - curr.offsetTop);\r\n                    if (currDistance < prev.distance) {\r\n                        return {\r\n                            distance: currDistance,\r\n                            element: curr\r\n                        };\r\n                    }\r\n                    return prev;\r\n                }, {\r\n                    distance: Infinity\r\n                });\r\n                next = next.element;\r\n                break;\r\n\r\n            case DomNavigatorMode.horizontal:\r\n                if (!this.$selected) {\r\n                    next = this.elements()[0];\r\n                    break;\r\n                }\r\n\r\n                next = this.$selected.previousElementSibling;\r\n                break;\r\n\r\n            case DomNavigatorMode.vertical:\r\n                break;\r\n\r\n            case DomNavigatorMode.grid:\r\n                if (!this.$selected) {\r\n                    next = this.elements()[0];\r\n                    break;\r\n                }\r\n\r\n                let index = this.elements().indexOf(this.$selected);\r\n                if (index % this.settings.cols !== 0) {\r\n                    next = this.$selected.previousElementSibling;\r\n                }\r\n\r\n                break;\r\n        }\r\n\r\n        this.select(next, DomNavigator.DIRECTION.left);\r\n    }\r\n\r\n    /**\r\n     * Navigate up to the next element if any.\r\n     *\r\n     * @return void.\r\n     */\r\n    private up() {\r\n        let next = null;\r\n\r\n        switch (this.settings.mode) {\r\n\r\n            case DomNavigatorMode.auto:\r\n                if (!this.$selected) {\r\n                    next = this.elements()[0];\r\n                    break;\r\n                }\r\n\r\n                let left = this.$selected.offsetLeft;\r\n                let top = this.$selected.offsetTop - 1;\r\n\r\n                next = this.elementsBefore(Infinity, top).reduce((prev, curr) => {\r\n                    let currDistance = Math.abs(left - curr.offsetLeft) + Math.abs(top - curr.offsetTop);\r\n                    if (currDistance < prev.distance) {\r\n                        return {\r\n                            distance: currDistance,\r\n                            element: curr\r\n                        };\r\n                    }\r\n                    return prev;\r\n                }, {\r\n                    distance: Infinity\r\n                });\r\n\r\n                next = next.element;\r\n                break;\r\n\r\n            case DomNavigatorMode.horizontal:\r\n                break;\r\n\r\n            case DomNavigatorMode.vertical:\r\n                if (!this.$selected) {\r\n                    next = this.elements()[0];\r\n                    break;\r\n                }\r\n\r\n                let elToSelect = this.$selected.previousElementSibling;\r\n                var count = this.$container.childNodes.length;\r\n                let attempt = 0;\r\n                while (this.findCommonElement(elToSelect?.classList, this.$ignoredClassList)) {\r\n                    if (attempt == count) {\r\n                        break;\r\n                    }\r\n                    attempt++;\r\n                    elToSelect = elToSelect.previousElementSibling;\r\n                }\r\n\r\n                if (!elToSelect) {\r\n                    break;\r\n                }\r\n                next = elToSelect;\r\n                break;\r\n\r\n            case DomNavigatorMode.grid:\r\n                if (!this.$selected) {\r\n                    next = this.elements()[0];\r\n                    break;\r\n                }\r\n\r\n                next = this.$selected;\r\n                for (let i = 0; i < this.settings.cols; i++) {\r\n                    next = next && next.previousElementSibling;\r\n                }\r\n\r\n                break;\r\n        }\r\n\r\n        this.select(next, DomNavigator.DIRECTION.up);\r\n    }\r\n\r\n    /**\r\n     * Triggers click event of the selected element.\r\n     */\r\n    private triggerClick() {\r\n        this.$selected.click();\r\n    }\r\n\r\n    /**\r\n     * Navigate right to the next element if any.\r\n     *\r\n     * @return void.\r\n     */\r\n    private right() {\r\n        let next = null;\r\n\r\n        switch (this.settings.mode) {\r\n\r\n            case DomNavigatorMode.auto:\r\n                if (!this.$selected) {\r\n                    next = this.elements()[0];\r\n                    break;\r\n                }\r\n\r\n                let left = this.$selected.offsetLeft + this.$selected.offsetWidth;\r\n                let top = this.$selected.offsetTop;\r\n\r\n                next = this.elementsAfter(left, 0).reduce((prev, curr) => {\r\n                    let currDistance = Math.abs(curr.offsetLeft - left) + Math.abs(curr.offsetTop - top);\r\n                    if (currDistance < prev.distance) {\r\n                        return {\r\n                            distance: currDistance,\r\n                            element: curr\r\n                        };\r\n                    }\r\n                    return prev;\r\n                }, {\r\n                    distance: Infinity\r\n                });\r\n                next = next.element;\r\n                break;\r\n\r\n            case DomNavigatorMode.horizontal:\r\n                if (!this.$selected) {\r\n                    next = this.elements()[0];\r\n                    break;\r\n                }\r\n                let elToSelect = this.$selected.nextElementSibling;\r\n                var count = this.$container.childNodes.length;\r\n                let attempt = 0;\r\n                while (this.findCommonElement(elToSelect?.classList, this.$ignoredClassList)) {\r\n                    if (attempt == count) {\r\n                        break;\r\n                    }\r\n                    attempt++;\r\n                    elToSelect = elToSelect.nextElementSibling;\r\n                }\r\n\r\n                if (!elToSelect) {\r\n                    break;\r\n                }\r\n                next = elToSelect;\r\n                break;\r\n\r\n            case DomNavigatorMode.vertical:\r\n                break;\r\n\r\n            case DomNavigatorMode.grid:\r\n                if (!this.$selected) {\r\n                    next = this.elements()[0];\r\n                    break;\r\n                }\r\n\r\n                let index = this.elements().indexOf(this.$selected);\r\n                if (index === 0 || (index + 1) % this.settings.cols !== 0) {\r\n                    next = this.$selected.nextElementSibling;\r\n                }\r\n\r\n                break;\r\n        }\r\n\r\n        this.select(next, DomNavigator.DIRECTION.right);\r\n    }\r\n\r\n    /**\r\n     * Navigate down to the next element if any.\r\n     */\r\n    private down() {\r\n        let next = null;\r\n\r\n        switch (this.settings.mode) {\r\n\r\n            case DomNavigatorMode.auto:\r\n                if (!this.$selected) {\r\n                    next = this.elements()[0];\r\n                    break;\r\n                }\r\n\r\n                let left = this.$selected.offsetLeft;\r\n                let top = this.$selected.offsetTop + this.$selected.offsetHeight;\r\n\r\n                next = this.elementsAfter(0, top).reduce((prev, curr) => {\r\n                    let currDistance = Math.abs(curr.offsetLeft - left) + Math.abs(curr.offsetTop - top);\r\n                    if (currDistance < prev.distance) {\r\n                        return {\r\n                            distance: currDistance,\r\n                            element: curr\r\n                        };\r\n                    }\r\n                    return prev;\r\n                }, {\r\n                    distance: Infinity\r\n                });\r\n                next = next.element;\r\n                break;\r\n\r\n            case DomNavigatorMode.horizontal:\r\n                break;\r\n\r\n            case DomNavigatorMode.vertical:\r\n                if (!this.$selected) {\r\n                    next = this.elements()[0];\r\n                    break;\r\n                }\r\n\r\n                let elToSelect = this.$selected.nextElementSibling;\r\n                var count = this.$container.childNodes.length;\r\n                let attempt = 0;\r\n                while (this.findCommonElement(elToSelect?.classList, this.$ignoredClassList)) {\r\n                    if (attempt == count) {\r\n                        break;\r\n                    }\r\n                    attempt++;\r\n                    elToSelect = elToSelect.nextElementSibling;\r\n                }\r\n\r\n                if (!elToSelect) {\r\n                    break;\r\n                }\r\n                next = elToSelect;\r\n                break;\r\n\r\n            case DomNavigatorMode.grid:\r\n                if (!this.$selected) {\r\n                    next = this.elements()[0];\r\n                    break;\r\n                }\r\n\r\n                next = this.$selected;\r\n                for (let i = 0; i < this.settings.cols; i++) {\r\n                    next = next && next.nextElementSibling;\r\n                }\r\n\r\n                break;\r\n        }\r\n\r\n        this.select(next, DomNavigator.DIRECTION.down);\r\n    }\r\n\r\n    /**\r\n     * Return the selected DOM element.\r\n     *\r\n     * @return {Element} The selected DOM element.\r\n     */\r\n    private selected() {\r\n        return this.$selected;\r\n    }\r\n\r\n    /**\r\n     * Select the given element.\r\n     *\r\n     * @param {Element} el The DOM element to select.\r\n     * @param {string} direction The direction.\r\n     * @return void\r\n     */\r\n    public select(el, direction) {\r\n        // Is there an element or is it selected?\r\n        if (!el || el === this.$selected) {\r\n            return; // Nothing to do here.\r\n        }\r\n        el = this.unboxElement(el);\r\n\r\n        // Unselect previous element.\r\n        if (this.$selected) {\r\n            this.removeClass(this.$selected, this.settings.selectedClassName);\r\n        }\r\n\r\n        // Scroll to given element.\r\n        this.scrollTo(el, direction);\r\n\r\n        // Select given element.\r\n        this.addClass(el, this.settings.selectedClassName);\r\n        this.$selected = el;\r\n        this.$selectionSubject.next(el);\r\n    }\r\n\r\n    /**\r\n     * Scroll the container to an element.\r\n     *\r\n     * @param el {Element} The destination element.\r\n     * @param direction {String} The direction of the current navigation.\r\n     *\r\n     * @return void.\r\n     */\r\n    private scrollTo(el, direction) {\r\n        el = this.unboxElement(el);\r\n        if (!this.inContainerViewport(el)) {\r\n            switch (direction) {\r\n                case DomNavigator.DIRECTION.left:\r\n                    this.$container.scrollLeft = el.offsetLeft - this.$container.offsetLeft;\r\n                    break;\r\n                case DomNavigator.DIRECTION.up:\r\n                    this.$container.scrollTop = el.offsetTop - this.$container.offsetTop;\r\n                    break;\r\n                case DomNavigator.DIRECTION.right:\r\n                    this.$container.scrollLeft = el.offsetLeft - this.$container.offsetLeft - (this.$container.offsetWidth - el.offsetWidth);\r\n                    break;\r\n                case DomNavigator.DIRECTION.down:\r\n                    this.$container.scrollTop = el.offsetTop - this.$container.offsetTop - (this.$container.offsetHeight - el.offsetHeight);\r\n                    break;\r\n            }\r\n        } else if (!this.inViewport(el)) {\r\n            switch (direction) {\r\n                case DomNavigator.DIRECTION.left:\r\n                    document.body.scrollLeft = this.absoluteOffsetLeft(el) - document.body.offsetLeft;\r\n                    break;\r\n                case DomNavigator.DIRECTION.up:\r\n                    document.body.scrollTop = this.absoluteOffsetTop(el) - document.body.offsetTop;\r\n                    break;\r\n                case DomNavigator.DIRECTION.right:\r\n                    document.body.scrollLeft = this.absoluteOffsetLeft(el) - document.body.offsetLeft - (document.documentElement.clientWidth - el.offsetWidth);\r\n                    break;\r\n                case DomNavigator.DIRECTION.down:\r\n                    document.body.scrollTop = this.absoluteOffsetTop(el) - document.body.offsetTop - (document.documentElement.clientHeight - el.offsetHeight);\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Indicate if an element is in the container viewport.\r\n     *\r\n     * @param el {Element} The element to check.\r\n     *\r\n     * @return {Boolean} true if the given element is in the container viewport, otherwise false.\r\n     */\r\n    private inContainerViewport(el) {\r\n        el = this.unboxElement(el);\r\n        // Check on left side.\r\n        if (el.offsetLeft - this.$container.scrollLeft < this.$container.offsetLeft) {\r\n            return false;\r\n        }\r\n        // Check on top side.\r\n        if (el.offsetTop - this.$container.scrollTop < this.$container.offsetTop) {\r\n            return false;\r\n        }\r\n        // Check on right side.\r\n        if ((el.offsetLeft + el.offsetWidth - this.$container.scrollLeft) > (this.$container.offsetLeft + this.$container.offsetWidth)) {\r\n            return false;\r\n        }\r\n        // Check on down side.\r\n        if ((el.offsetTop + el.offsetHeight - this.$container.scrollTop) > (this.$container.offsetTop + this.$container.offsetHeight)) {\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Return an array of the navigable elements.\r\n     *\r\n     * @return {Array} An array of elements.\r\n     */\r\n    private elements() {\r\n        let children = [];\r\n        for (let i = this.$container.children.length; i--;) {\r\n            // Skip comment nodes on IE8\r\n            if (this.$container.children[i].nodeType !== 8 && !this.findCommonElement(this.$container.children[i].classList, this.$ignoredClassList)) {\r\n                children.unshift(this.$container.children[i]);\r\n            }\r\n        }\r\n        return children;\r\n    }\r\n\r\n    private findCommonElement(array1, array2) {\r\n        // Loop for array1\r\n        for (let i = 0; i < array1.length; i++) {\r\n\r\n            // Loop for array2\r\n            for (let j = 0; j < array2.length; j++) {\r\n\r\n                // Compare the element of each and\r\n                // every element from both of the\r\n                // arrays\r\n                if (array1[i] === array2[j]) {\r\n\r\n                    // Return if common element found\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n\r\n        // Return if no common element exist\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Return an array of navigable elements after an offset.\r\n     *\r\n     * @param {number} left The left offset.\r\n     * @param {number} top The top offset.\r\n     *\r\n     * @return {Array} An array of elements.\r\n     */\r\n    private elementsAfter(left, top) {\r\n        return this.elements().filter(el => el.offsetLeft >= left && el.offsetTop >= top);\r\n    }\r\n\r\n    /**\r\n     * Return an array of navigable elements before an offset.\r\n     *\r\n     * @param {number} left The left offset.\r\n     * @param {number} top The top offset.\r\n     *\r\n     * @return {Array} An array of elements.\r\n     */\r\n    private elementsBefore(left, top) {\r\n        return this.elements().filter(el => el.offsetLeft <= left && el.offsetTop <= top);\r\n    }\r\n\r\n    /**\r\n     * Handle the key down event.\r\n     *\r\n     * @param {Event} event The event object.\r\n     *\r\n     * @return void.\r\n     */\r\n    private handleKeydown(event): void {\r\n        if (this.$keys[event.which]) {\r\n            event.preventDefault();\r\n            this.$keys[event.which].call(this);\r\n        }\r\n    }\r\n}","/*\r\n * Public API Surface of ngx-dom-navigator\r\n * Author: Serhat KAYA github.com/serhatkaya\r\n * Version: 1.0.5-rel\r\n */\r\n\r\n\r\nexport * from './lib/dom-navigator';\r\nexport * from './lib/interfaces/dom-navigator-settings.i';\r\nexport * from './lib/interfaces/dom-navigator.element.i';\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}